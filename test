#!/bin/sh

set -eu

lib=$(dirname "$0")/../jagen-lib
usr=$(dirname "$0")
products="ast-sigma-firmware ast-hi-linux genivi android-integration rust test"

lib=$(cd "$lib" && pwd -P)
usr=$(cd "$usr" && pwd -P)

setup_product() {
    local product="${1:-}"; shift
    rm -rf "$product"
    echo "setup $product"
    (
        mkdir -p "$product"; cd "$product"
        "$jagen_dir/init" -L "$usr" "$lib" "$@" || true
        cp -a "build/build.ninja" "build/build.ninja.orig"
        cp -a "include" "include.orig"
        ./jagen refresh >refresh_out.orig 2>&1
        # . ./env.sh
        # jagen list packages -ad > list.packages.txt
        # cp -a list.packages.txt list.packages.txt.orig
    )
}

refresh_product() {
    (
        cd $1
        ./jagen refresh >refresh_out.txt 2>&1 || true
        # jagen list packages -ad > list.packages.txt
    )
}

check_product() {
    local name="$1"
    (
        printf "===== %-20s =====\n" "$name"
        cd "$name"
        diff -u refresh_out.txt refresh_out.orig || true
        diff -u build/build.ninja.orig build/build.ninja || true
        diff -u include.orig include || true
        # if [ -f list.packages.txt.orig ] && [ -f list.packages.txt ]; then
        #     diff -u list.packages.txt.orig list.packages.txt || true
        # fi
    )
}

case $1 in
    setup)
        jagen_dir="$2"
        jagen_dir=$(cd "$jagen_dir" && pwd -P)
        setup_product ast-sigma-firmware vendor/ast sdk/sigma product/ast-sigma-firmware
        setup_product ast-hi-linux vendor/ast sdk/hi-linux product/ast-hi-linux
        setup_product genivi vendor/genivi product/genivi
        setup_product android-integration product/android-integration
        setup_product rust product/rust
        setup_product test product/test/base product/test/middle product/test/top
        ;;
    refresh)
        for product in $products; do
            refresh_product "$product"
        done ;;
    check)
        for product in $products; do
            check_product "$product"
        done ;;
esac
